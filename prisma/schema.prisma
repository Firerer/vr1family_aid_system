generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model AidRecipient {
  id                 String  @id @default(cuid())
  name               String
  age                Int
  previousAddress    String
  totalFamilyMembers Int
  partnerAge         Int?
  partnerName        String?
  kids               Kid[]
}

model Kid {
  id       String       @id @default(cuid())
  parentId String
  name     String
  age      Int
  parent   AidRecipient @relation(fields: [parentId], references: [id])

  @@index([parentId])
}

model PrivateAidRecipient {
  id                String    @id @default(cuid())
  name              String
  nationality       String
  idDocumentNumber1 String
  idExpiryDate1     DateTime
  idDocumentNumber2 String?
  idExpiryDate2     DateTime?
  idDocumentNumber3 String?
  idExpiryDate3     DateTime?
}

model Donor {
  id                      String        @id @default(cuid())
  name                    String
  mailingAddress          String
  phoneNumber             String
  email                   String        @unique
  donorType               DonorType
  preferredCommunication  String
  age                     Int?
  organizationHeadquarter String?
  principalContactPerson  String?
  donatedItems            DonatedItem[]
}

model PrivateAidDonor {
  id                String    @id @default(cuid())
  name              String
  nationality       String
  idDocumentNumber1 String
  idExpiryDate1     DateTime
  idDocumentNumber2 String?
  idExpiryDate2     DateTime?
  idDocumentNumber3 String?
  idExpiryDate3     DateTime?
  donorType         DonorType
  abn               Int?
}

model AidCategory {
  id              Int             @id @default(autoincrement())
  name            String          @unique
  inventoryStatus InventoryStatus
  items           AidItem[]
}

model AidItem {
  id              Int           @id @default(autoincrement())
  name            String
  quantity        Int
  aidCategoryId   Int
  expiryDate      DateTime?
  mainIngredients String?
  allergenInfo    String?
  brand           String?
  numericSize     Float?
  alphabeticSize  String?
  aidCategory     AidCategory   @relation(fields: [aidCategoryId], references: [id])
  relatedKits     KitItem[]
  donatedItems    DonatedItem[]

  @@index([aidCategoryId])
}

model Kit {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  kitItems KitItem[]
}

model KitItem {
  kitId    Int
  itemId   Int
  quantity Int
  item     AidItem @relation(fields: [itemId], references: [id])
  kit      Kit     @relation(fields: [kitId], references: [id])

  @@id([itemId, kitId])
  @@index([itemId])
  @@index([kitId])
}

model ItemRequest {
  id           Int    @id @default(autoincrement())
  itemType     String
  itemCategory String
  itemName     String
  quantity     Int
  note         String
}

model DonatedItem {
  id        Int     @id @default(autoincrement())
  donorId   String
  aidItemId Int
  quantity  Int
  donor     Donor   @relation(fields: [donorId], references: [id])
  aidItem   AidItem @relation(fields: [aidItemId], references: [id])

  @@index([donorId])
  @@index([aidItemId])
}

enum DonorType {
  INDIVIDUAL
  ORGANIZATION
}

enum InventoryStatus {
  LOW
  MEDIUM
  HIGH
  EXCESS
}
